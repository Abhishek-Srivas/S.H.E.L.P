{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport '../Form.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport Google_logo from '../../../components/UI/Logo/google';\nimport axios from '../../../axios-shelp/axios-shelp';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Form: {\n        name: {\n          placeholder: 'First Name',\n          value: \"\",\n          valid: false,\n          type: 'text',\n          error: \" \",\n          msg: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 15\n          },\n          touched: false\n        },\n        email: {\n          placeholder: 'Email',\n          value: \"\",\n          valid: false,\n          type: 'email',\n          error: \" \",\n          msg: '',\n          regex: /^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/,\n          validation: {\n            required: true\n          },\n          touched: false\n        },\n        password: {\n          placeholder: 'Password',\n          value: \"\",\n          valid: false,\n          type: 'password',\n          error: \" \",\n          msg: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 18\n          },\n          touched: false\n        }\n      }\n    };\n\n    this.inputchangeHandler = (event, inputIdentifier) => {\n      const updatedForm = { ...this.state.Form\n      };\n      const updatedElement = { ...updatedForm[inputIdentifier]\n      };\n      updatedElement.value = event.target.value;\n      if (updatedElement.value.length > 0) updatedElement.touched = true;else {\n        updatedElement.touched = false;\n        updatedElement.error = \"\";\n      }\n      updatedElement.valid = this.checkValidity(updatedElement.value, updatedElement.validation);\n\n      if (inputIdentifier === 'name' && !updatedElement.valid) {\n        updatedElement.error = \"At least 5 characters and at most 15\";\n        updatedElement.msg = \"\";\n      }\n\n      if (inputIdentifier === 'name' && updatedElement.valid) {\n        updatedElement.error = \"\";\n        updatedElement.msg = \"All good!\";\n      }\n\n      if (inputIdentifier === \"password\" && !updatedElement.valid) {\n        updatedElement.error = \"At least 5 characters and at most 18\";\n        updatedElement.msg = \"\";\n      }\n\n      if (inputIdentifier === \"password\" && updatedElement.valid) {\n        updatedElement.error = \"\";\n        updatedElement.msg = \"All good!\";\n      } // \n\n\n      if (inputIdentifier === \"email\" && !updatedElement.valid) {\n        updatedElement.error = \"check format\";\n        updatedElement.msg = \"\";\n      }\n\n      if (inputIdentifier === \"email\" && updatedElement.valid) {\n        updatedElement.error = \"\";\n        updatedElement.msg = \"All good!\";\n      }\n\n      updatedForm[inputIdentifier] = updatedElement;\n      this.setState({\n        Form: updatedForm\n      });\n    };\n\n    this.formHandler = event => {\n      event.preventDefault();\n      const formData = {};\n\n      for (let formElement in this.state.Form) {\n        formData[formElement] = this.state.Form[formElement].value;\n      }\n\n      axios.put('/signup', formData).then(response => {\n        console.log('Success:', response);\n        if (response.status === 201 || response.status === 200) alert(\"Account has been made\");else alert(\"Something went wrong\");\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    const regex = rules.regex;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.regex) {\n      isValid = regex.test(value) && isValid;\n    }\n\n    return isValid;\n  } //   runs whenever there is any change in the input field\n\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.Form) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.Form[key]\n      });\n    }\n\n    ;\n    let form = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"google-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Google_logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 47\n      }\n    }), \"  Continue using google\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"devider-or\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.formHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, formElementsArray.map(x => /*#__PURE__*/React.createElement(Input, {\n      key: x.id,\n      placeholder: x.config.placeholder,\n      value: x.config.value,\n      type: x.config.type,\n      invalid: !x.config.valid,\n      touched: x.config.touched,\n      errors: x.config.error,\n      msg: x.config.msg,\n      changed: event => this.inputchangeHandler(event, x.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Sumbit-btn\",\n      type: \"sumbit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \"Create account\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, \" Already have an account? \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 72\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"Link-teach\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 18\n      }\n    }, \"Teach on S-help\")));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SideContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MainPage, {\n      heading1: \"Start your\",\n      heading2: \"learning with\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }), form);\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Signup/Signup.js"],"names":["React","Component","Input","MainPage","Google_logo","axios","Signup","state","Form","name","placeholder","value","valid","type","error","msg","validation","required","minLength","maxLength","touched","email","regex","password","inputchangeHandler","event","inputIdentifier","updatedForm","updatedElement","target","length","checkValidity","setState","formHandler","preventDefault","formData","formElement","put","then","response","console","log","status","alert","catch","rules","isValid","trim","test","render","formElementsArray","key","push","id","config","form","map","x"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../Form.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport Google_logo from '../../../components/UI/Logo/google';\nimport axios from '../../../axios-shelp/axios-shelp';\n\nclass Signup extends Component {\n\n    state = { \n            Form:{\n                 name: {\n\n                    placeholder: 'First Name',\n                    value: \"\",\n                    valid: false,\n                    type: 'text',\n                    error: \" \",\n                    msg: '',\n\n                    validation: {\n                        required: true,\n                        minLength:5,\n                        maxLength:15\n                    },\n\n                    touched: false,\n                \n            },\n                email: {\n\n                    placeholder: 'Email',\n                    value: \"\",\n                    valid: false,\n                    type: 'email',\n                    error: \" \",\n                    msg: '',\n                    regex:/^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/,\n\n                    validation: {\n                        required: true,\n                       \n                    },\n                    touched: false,\n                \n            },\n\n                password: {\n\n                    placeholder: 'Password',\n                    value: \"\",\n                    valid: false,\n                    type: 'password',\n                    error: \" \",\n                    msg: '',\n\n                    validation: {\n                        required: true,\n                        minLength:5,\n                        maxLength:18\n                    },\n                    touched: false,\n                \n            },\n\n        }\n    }\n\n\n    checkValidity(value,rules){\n        let isValid = true;\n        const regex=rules.regex;\n\n        if(rules.required){\n            isValid =value.trim()!=='' && isValid;\n        }\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength  && isValid;\n        }\n     \n        \n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength  && isValid;\n        }\n\n        if(rules.regex){\n            isValid = regex.test(value) && isValid;\n        }\n\n        return isValid;\n        \n     }\n\n\n//   runs whenever there is any change in the input field\n    inputchangeHandler = (event,inputIdentifier)=> {\n        const updatedForm = {\n            ...this.state.Form\n        }\n        const updatedElement = {...updatedForm[inputIdentifier]}\n     \n        updatedElement.value = event.target.value;\n\n        if(updatedElement.value.length>0) \n            updatedElement.touched=true;\n\n        else {updatedElement.touched=false;\n              updatedElement.error=\"\";  \n        }\n        \n        updatedElement.valid = this.checkValidity(updatedElement.value,\n            updatedElement.validation);\n            \n\n        if(inputIdentifier ==='name' && !updatedElement.valid){\n            updatedElement.error = \"At least 5 characters and at most 15\";\n            updatedElement.msg=\"\";\n        }\n        if(inputIdentifier ==='name' && updatedElement.valid){\n            updatedElement.error=\"\";\n            updatedElement.msg=\"All good!\";\n        }\n\n        if(inputIdentifier === \"password\" && !updatedElement.valid){\n            updatedElement.error = \"At least 5 characters and at most 18\";\n            updatedElement.msg=\"\";\n        }\n        if(inputIdentifier === \"password\" && updatedElement.valid){\n            updatedElement.error=\"\";\n            updatedElement.msg=\"All good!\";\n        }\n\n        // \n        if(inputIdentifier === \"email\" && !updatedElement.valid){\n            updatedElement.error = \"check format\";\n            updatedElement.msg=\"\";\n        }\n        if(inputIdentifier === \"email\" && updatedElement.valid){\n            updatedElement.error=\"\";\n            updatedElement.msg=\"All good!\";\n        }\n    \n        updatedForm[inputIdentifier] = updatedElement;\n        this.setState({Form: updatedForm});\n\n    }\n   \n\n    formHandler = (event)=> {\n        event.preventDefault();\n        const formData ={};\n        for(let formElement in this.state.Form){\n                formData[formElement]=this.state.Form[formElement].value;\n         }\n        \n        axios.put('/signup',formData)\n\n        .then(response => {console.log('Success:', response) \n        \n        if(response.status ===201 || response.status ===200) \n        alert(\"Account has been made\") \n        else alert(\"Something went wrong\")})\n\n\n        .catch(error=>{console.log(error)});\n\n    }\n\n\n\n    render() {\n\n        const formElementsArray =[];\n        for(let key in this.state.Form ){\n            formElementsArray.push({\n                id:key,\n                config:this.state.Form[key]\n            });\n\n        };\n\n        let form = (\n          <div className=\"login-form\">\n              <button className=\"google-btn\"> <Google_logo/>  Continue using google</button>\n              <p className=\"devider-or\">OR</p>\n            <form onSubmit={this.formHandler} >\n            \n                {\n                    formElementsArray.map(x=> (\n\n                      <Input \n                        key={x.id}\n                        placeholder={x.config.placeholder}\n                        value={x.config.value}\n                        type={x.config.type}\n                        invalid={!x.config.valid}\n                        touched={x.config.touched}\n                        errors={x.config.error}\n                        msg={x.config.msg}\n                        changed={(event)=> this.inputchangeHandler(event,x.id)}/>\n\n                    ))\n                }\n                <button className=\"Sumbit-btn\" type=\"sumbit\" >Create account</button>\n                <p className=\"account-login\"> Already have an account? <a href=\"/\">Login</a></p>\n                 <hr/>\n\n                 <p class=\"Link-teach\">Teach on S-help</p>          \n            </form> \n            </div>\n        );\n\n        return (\n            <div className=\"SideContent\">\n                \n                <MainPage \n                heading1={\"Start your\"}\n                heading2={\"learning with\"}/>\n\n                    {form}\n            </div>\n        );\n    }\n  \n}\n\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}