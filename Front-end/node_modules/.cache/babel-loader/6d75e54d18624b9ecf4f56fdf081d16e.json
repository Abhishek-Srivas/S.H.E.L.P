{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Login/Login.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport Google_logo from '../../../components/UI/Logo/google';\nimport axios from '../../../axios-shelp/axios-shelp';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Form: {\n        'name': {\n          placeholder: 'First Name',\n          value: '',\n          valid: false,\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 8\n          }\n        },\n        'email': {\n          placeholder: 'Email',\n          value: '',\n          valid: false,\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 8\n          }\n        },\n        'password': {\n          placeholder: 'Password',\n          value: '',\n          valid: false,\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 8\n          }\n        }\n      }\n    };\n\n    this.formHandler = event => {\n      event.preventDefault();\n      const formData = {};\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n\n      for (let formElement in this.state.Form) {\n        formData[formElement] = this.state.Form[formElement].value;\n      }\n\n      console.log(formData);\n      axios.put('/signup', formData).then(response => {\n        console.log(formData);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.inputchangeHandler = (event, inputIdentifier) => {\n      const updatedForm = { ...this.state\n      };\n      const updatedElement = { ...updatedForm[inputIdentifier]\n      };\n      updatedElement.value = event.target.value; // validitycheck\n\n      updatedForm[inputIdentifier] = updatedElement;\n      this.setState({\n        Form: updatedForm\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.Form) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.Form[key]\n      });\n    }\n\n    ;\n    let form = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"google-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Google_logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 47\n      }\n    }), \"  Continue using google\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"devider-or\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, formElementsArray.map(x => /*#__PURE__*/React.createElement(Input, {\n      key: x.id,\n      elementType: x.config.elementType,\n      elementConfig: x.config.elementConfig,\n      value: x.config.value //invalid={!x.config.valid}\n      ,\n      changed: event => this.inputchangeHandler(event, x.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Sumbit-btn\",\n      onClick: this.formHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"Create account\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, \" Already have an account? \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 72\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"Link-teach\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 18\n      }\n    }, \"Teach on S-help\")));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SideContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MainPage, {\n      heading1: \"Start your\",\n      heading2: \"learning with\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }), form);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Login/Login.js"],"names":["React","Component","Input","MainPage","Google_logo","axios","Login","state","Form","placeholder","value","valid","validation","required","minLength","maxLength","formHandler","event","preventDefault","formData","headers","formElement","console","log","put","then","response","catch","error","inputchangeHandler","inputIdentifier","updatedForm","updatedElement","target","setState","render","formElementsArray","key","push","id","config","form","map","x","elementType","elementConfig"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './Login.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport Google_logo from '../../../components/UI/Logo/google';\nimport axios from '../../../axios-shelp/axios-shelp';\n\nclass Login extends Component {\n\n    state = { \n            Form:{\n                 'name': {\n\n                    placeholder: 'First Name',\n                    value: '',\n                    valid: false,\n\n                    validation: {\n                        required: true,\n                        minLength:5,\n                        maxLength:8\n                    },\n                \n            },\n                'email': {\n\n                    placeholder: 'Email',\n                    value: '',\n                    valid: false,\n\n                    validation: {\n                        required: true,\n                        minLength:5,\n                        maxLength:8\n                    },\n                \n            },\n\n                'password': {\n\n                    placeholder: 'Password',\n                    value: '',\n                    valid: false,\n\n                    validation: {\n                        required: true,\n                        minLength:5,\n                        maxLength:8\n                    },\n                \n            },\n\n\n           \n                \n\n        }\n    }\n    \n\n    \n\n\n\n    formHandler = (event)=> {\n        event.preventDefault();\n    \n        const formData ={};\n        const headers = {'Content-Type': 'application/json'};\n\n        for(let formElement in this.state.Form){\n            \n            formData[formElement]=this.state.Form[formElement].value; }\n        \n        \n\n        \n\n        \n        console.log(formData);\n\n       \n\n        axios.put('/signup',formData)\n\n        .then(response=>{console.log(formData)})\n\n        .catch(error=>{console.log(error)});\n\n    }\n\n\n\n\n//   runs whenever there is any change in the input field\n    inputchangeHandler = (event,inputIdentifier)=> {\n        const updatedForm = {\n            ...this.state\n        }\n        const updatedElement = {...updatedForm[inputIdentifier]}\n\n        updatedElement.value = event.target.value;\n        // validitycheck\n        updatedForm[inputIdentifier] = updatedElement;\n        this.setState({Form: updatedForm});\n\n    }\n   \n\n    render() {\n\n        const formElementsArray =[];\n        for(let key in this.state.Form ){\n            formElementsArray.push({\n                id:key,\n                config:this.state.Form[key]\n            });\n\n        };\n\n        let form = (\n          <div className=\"login-form\">\n              <button className=\"google-btn\"> <Google_logo/>  Continue using google</button>\n              <p className=\"devider-or\">OR</p>\n            <form >\n            \n                {\n                    formElementsArray.map(x=> (\n\n                      <Input \n                        key={x.id}\n                        elementType={x.config.elementType}\n                        elementConfig={x.config.elementConfig}\n                        value={x.config.value}\n                       //invalid={!x.config.valid}\n                        changed={(event)=> this.inputchangeHandler(event,x.id)}/>\n                    ))\n                }\n                <button className=\"Sumbit-btn\" onClick={this.formHandler}>Create account</button>\n                <p className=\"account-login\"> Already have an account? <a href=\"/\">Login</a></p>\n                 <hr/>\n\n                 <p class=\"Link-teach\">Teach on S-help</p>          \n            </form> \n            </div>\n        );\n\n        return (\n            <div className=\"SideContent\">\n                \n                <MainPage \n                heading1={\"Start your\"}\n                heading2={\"learning with\"}/>\n\n                    {form}\n            </div>\n        );\n    }\n  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}