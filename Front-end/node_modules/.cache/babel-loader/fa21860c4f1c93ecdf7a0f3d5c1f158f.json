{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport '../Form.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport Google_logo from '../../../components/UI/Logo/google';\nimport axios from '../../../axios-shelp/axios-shelp';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Form: {\n        name: {\n          placeholder: 'First Name',\n          value: \"\",\n          valid: false,\n          type: 'text',\n          error: \" \",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 15\n          },\n          touched: false\n        },\n        email: {\n          placeholder: 'Email',\n          value: \"\",\n          valid: false,\n          type: 'email',\n          error: \" \",\n          validation: {\n            required: true\n          },\n          touched: false\n        },\n        password: {\n          placeholder: 'Password',\n          value: \"\",\n          valid: false,\n          type: 'password',\n          error: \" \",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 8\n          },\n          touched: false\n        }\n      }\n    };\n\n    this.inputchangeHandler = (event, inputIdentifier) => {\n      const updatedForm = { ...this.state.Form\n      };\n      const updatedElement = { ...updatedForm[inputIdentifier]\n      };\n      updatedElement.value = event.target.value;\n      if (updatedElement.value.length > 0) updatedElement.touched = true;else updatedElement.touched = false;\n      updatedElement.valid = this.checkValidity(updatedElement.value, updatedElement.validation, updatedElement.error); //updatedElement.error=error;\n\n      updatedForm[inputIdentifier] = updatedElement;\n      this.setState({\n        Form: updatedForm\n      });\n    };\n  }\n\n  checkValidity(value, rules, Errors) {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    } else {\n      this.setState(Error = \"sadasd\");\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    } else {\n      this.setState(Error = \"sadasd\");\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  } //   runs whenever there is any change in the input field\n\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.Form) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.Form[key]\n      });\n    }\n\n    ;\n    let form = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"google-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Google_logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 47\n      }\n    }), \"  Continue using google\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"devider-or\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.formHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, formElementsArray.map(x => /*#__PURE__*/React.createElement(Input, {\n      key: x.id,\n      placeholder: x.config.placeholder,\n      value: x.config.value,\n      type: x.config.type,\n      invalid: !x.config.valid,\n      touched: x.config.touched,\n      errors: x.config.error,\n      changed: event => this.inputchangeHandler(event, x.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Sumbit-btn\",\n      type: \"sumbit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Create account\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \" Already have an account? \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 72\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"Link-teach\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 18\n      }\n    }, \"Teach on S-help\")));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SideContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MainPage, {\n      heading1: \"Start your\",\n      heading2: \"learning with\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), form);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Signup/Signup.js"],"names":["React","Component","Input","MainPage","Google_logo","axios","Login","state","Form","name","placeholder","value","valid","type","error","validation","required","minLength","maxLength","touched","email","password","inputchangeHandler","event","inputIdentifier","updatedForm","updatedElement","target","length","checkValidity","setState","rules","Errors","isValid","trim","Error","render","formElementsArray","key","push","id","config","form","formHandler","map","x"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../Form.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport Google_logo from '../../../components/UI/Logo/google';\nimport axios from '../../../axios-shelp/axios-shelp';\n\nclass Login extends Component {\n\n    state = { \n            Form:{\n                 name: {\n\n                    placeholder: 'First Name',\n                    value: \"\",\n                    valid: false,\n                    type: 'text',\n                    error: \" \",\n\n                    validation: {\n                        required: true,\n                        minLength:5,\n                        maxLength:15\n                    },\n\n                    touched: false,\n                \n            },\n                email: {\n\n                    placeholder: 'Email',\n                    value: \"\",\n                    valid: false,\n                    type: 'email',\n                    error: \" \",\n\n                    validation: {\n                        required: true,\n                       \n                    },\n                    touched: false,\n                \n            },\n\n                password: {\n\n                    placeholder: 'Password',\n                    value: \"\",\n                    valid: false,\n                    type: 'password',\n                    error: \" \",\n\n                    validation: {\n                        required: true,\n                        minLength:5,\n                        maxLength:8\n                    },\n                    touched: false,\n                \n            },\n\n        }\n    }\n\n\n    checkValidity(value,rules,Errors){\n        let isValid = true;\n\n        if(rules.required){\n            isValid =value.trim()!=='' && isValid;\n        }\n\n        else {\n            this.setState(Error=\"sadasd\");\n        }        \n\n\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength  && isValid;\n        }\n        else {\n            this.setState(Error=\"sadasd\");\n        }  \n        \n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength  && isValid;\n        }\n\n        return isValid;\n        \n     }\n\n\n\n\n\n\n//   runs whenever there is any change in the input field\n    inputchangeHandler = (event,inputIdentifier)=> {\n        const updatedForm = {\n            ...this.state.Form\n        }\n        const updatedElement = {...updatedForm[inputIdentifier]}\n     \n        updatedElement.value = event.target.value;\n        if(updatedElement.value.length>0) updatedElement.touched=true;\n        else updatedElement.touched=false;\n        \n        updatedElement.valid = this.checkValidity(updatedElement.value,\n            updatedElement.validation,updatedElement.error);\n\n        //updatedElement.error=error;\n        updatedForm[inputIdentifier] = updatedElement;\n        this.setState({Form: updatedForm});\n\n    }\n   \n\n    render() {\n\n        const formElementsArray =[];\n        for(let key in this.state.Form ){\n            formElementsArray.push({\n                id:key,\n                config:this.state.Form[key]\n            });\n\n        };\n\n        let form = (\n          <div className=\"login-form\">\n              <button className=\"google-btn\"> <Google_logo/>  Continue using google</button>\n              <p className=\"devider-or\">OR</p>\n            <form onSubmit={this.formHandler} >\n            \n                {\n                    formElementsArray.map(x=> (\n\n                      <Input \n                        key={x.id}\n                        placeholder={x.config.placeholder}\n                        value={x.config.value}\n                        type={x.config.type}\n                        invalid={!x.config.valid}\n                        touched={x.config.touched}\n                        errors={x.config.error}\n                        changed={(event)=> this.inputchangeHandler(event,x.id)}/>\n\n                    ))\n                }\n                <button className=\"Sumbit-btn\" type=\"sumbit\" >Create account</button>\n                <p className=\"account-login\"> Already have an account? <a href=\"/\">Login</a></p>\n                 <hr/>\n\n                 <p class=\"Link-teach\">Teach on S-help</p>          \n            </form> \n            </div>\n        );\n\n        return (\n            <div className=\"SideContent\">\n                \n                <MainPage \n                heading1={\"Start your\"}\n                heading2={\"learning with\"}/>\n\n                    {form}\n            </div>\n        );\n    }\n  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}