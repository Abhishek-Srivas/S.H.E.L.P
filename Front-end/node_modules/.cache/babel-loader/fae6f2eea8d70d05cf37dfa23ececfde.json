{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport '../Form.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport Google_logo from '../../../components/UI/Logo/google';\nimport axios from '../../../axios-shelp/axios-shelp';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Form: {\n        name: {\n          placeholder: 'First Name',\n          value: \"\",\n          valid: false,\n          type: 'text',\n          error: \" \",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 15\n          },\n          touched: false\n        },\n        email: {\n          placeholder: 'Email',\n          value: \"\",\n          valid: false,\n          type: 'email',\n          error: \" \",\n          validation: {\n            required: true\n          },\n          touched: false\n        },\n        password: {\n          placeholder: 'Password',\n          value: \"\",\n          valid: false,\n          type: 'password',\n          error: \" \",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 8\n          },\n          touched: false\n        }\n      }\n    };\n\n    this.formHandler = event => {\n      event.preventDefault();\n      const formData = {};\n\n      for (let formElement in this.state.Form) {\n        formData[formElement] = this.state.Form[formElement].value;\n      }\n\n      axios.post('/signup', formData).then(response => {\n        console.log('Success:', response);\n        if (response.status === 201 || response.status === 200) alert(\"Account has been made\");else alert(\"Something went wrong\");\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.inputchangeHandler = (event, inputIdentifier) => {\n      const updatedForm = { ...this.state.Form\n      };\n      const updatedElement = { ...updatedForm[inputIdentifier]\n      };\n      updatedElement.value = event.target.value;\n      if (updatedElement.value.length > 0) updatedElement.touched = true;else updatedElement.touched = false;\n      updatedElement.valid = this.checkValidity(updatedElement.value, updatedElement.validation, updatedElement.error);\n      updatedForm[inputIdentifier] = updatedElement;\n      this.setState({\n        Form: updatedForm\n      });\n    };\n  }\n\n  checkValidity(value, rules, error) {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    } else {\n      this.setState({\n        error: \"ioasd\"\n      });\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    } else {\n      error = \"less tgab\";\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.Form) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.Form[key]\n      });\n    }\n\n    ;\n    let form = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"google-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Google_logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 47\n      }\n    }), \"  Continue using google\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"devider-or\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.formHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, formElementsArray.map(x => /*#__PURE__*/React.createElement(Input, {\n      key: x.id,\n      placeholder: x.config.placeholder,\n      value: x.config.value,\n      type: x.config.type,\n      invalid: !x.config.valid,\n      touched: x.config.touched,\n      errors: x.config.error,\n      changed: event => this.inputchangeHandler(event, x.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Sumbit-btn\",\n      type: \"sumbit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"Create account\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, \" Already have an account? \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 72\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"Link-teach\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 18\n      }\n    }, \"Teach on S-help\")));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SideContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MainPage, {\n      heading1: \"Start your\",\n      heading2: \"learning with\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }), form);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Signup/Signup.js"],"names":["React","Component","Input","MainPage","Google_logo","axios","Login","state","Form","name","placeholder","value","valid","type","error","validation","required","minLength","maxLength","touched","email","password","formHandler","event","preventDefault","formData","formElement","post","then","response","console","log","status","alert","catch","inputchangeHandler","inputIdentifier","updatedForm","updatedElement","target","length","checkValidity","setState","rules","isValid","trim","render","formElementsArray","key","push","id","config","form","map","x"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../Form.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport Google_logo from '../../../components/UI/Logo/google';\nimport axios from '../../../axios-shelp/axios-shelp';\n\nclass Login extends Component {\n\n    state = { \n            Form:{\n                 name: {\n\n                    placeholder: 'First Name',\n                    value: \"\",\n                    valid: false,\n                    type: 'text',\n                    error: \" \",\n\n                    validation: {\n                        required: true,\n                        minLength:5,\n                        maxLength:15\n                    },\n\n                    touched: false,\n                \n            },\n                email: {\n\n                    placeholder: 'Email',\n                    value: \"\",\n                    valid: false,\n                    type: 'email',\n                    error: \" \",\n\n                    validation: {\n                        required: true,\n                       \n                    },\n                    touched: false,\n                \n            },\n\n                password: {\n\n                    placeholder: 'Password',\n                    value: \"\",\n                    valid: false,\n                    type: 'password',\n                    error: \" \",\n\n                    validation: {\n                        required: true,\n                        minLength:5,\n                        maxLength:8\n                    },\n                    touched: false,\n                \n            },\n\n        }\n    }\n    \n    checkValidity(value,rules,error){\n        let isValid = true;\n\n        if(rules.required){\n            isValid =value.trim()!=='' && isValid;\n        }\n\n        else {\n            this.setState({error:\"ioasd\"})\n        }\n\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength  && isValid;\n        }\n        else {\n            error = \"less tgab\";\n        }\n\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength  && isValid;\n        }\n\n        return isValid;\n        \n     }\n\n\n\n\n    formHandler = (event)=> {\n        event.preventDefault();\n        const formData ={};\n        for(let formElement in this.state.Form){\n                formData[formElement]=this.state.Form[formElement].value;\n         }\n        \n        axios.post('/signup',formData)\n\n        .then(response => {console.log('Success:', response) \n        \n        if(response.status ===201 || response.status ===200) \n        alert(\"Account has been made\") \n        else alert(\"Something went wrong\")})\n\n\n        .catch(error=>{console.log(error)});\n\n    }\n\n\n\n\n//   runs whenever there is any change in the input field\n    inputchangeHandler = (event,inputIdentifier)=> {\n        const updatedForm = {\n            ...this.state.Form\n        }\n        const updatedElement = {...updatedForm[inputIdentifier]}\n\n        updatedElement.value = event.target.value;\n        if(updatedElement.value.length>0) updatedElement.touched=true;\n        else updatedElement.touched=false;\n        \n        updatedElement.valid = this.checkValidity(updatedElement.value,\n            updatedElement.validation,updatedElement.error);\n\n\n        updatedForm[inputIdentifier] = updatedElement;\n        this.setState({Form: updatedForm});\n\n    }\n   \n\n    render() {\n\n        const formElementsArray =[];\n        for(let key in this.state.Form ){\n            formElementsArray.push({\n                id:key,\n                config:this.state.Form[key]\n            });\n\n        };\n\n        let form = (\n          <div className=\"login-form\">\n              <button className=\"google-btn\"> <Google_logo/>  Continue using google</button>\n              <p className=\"devider-or\">OR</p>\n            <form onSubmit={this.formHandler} >\n            \n                {\n                    formElementsArray.map(x=> (\n\n                      <Input \n                        key={x.id}\n                        placeholder={x.config.placeholder}\n                        value={x.config.value}\n                        type={x.config.type}\n                        invalid={!x.config.valid}\n                        touched={x.config.touched}\n                        errors={x.config.error}\n                        changed={(event)=> this.inputchangeHandler(event,x.id)}/>\n\n                    ))\n                }\n                <button className=\"Sumbit-btn\" type=\"sumbit\" >Create account</button>\n                <p className=\"account-login\"> Already have an account? <a href=\"/\">Login</a></p>\n                 <hr/>\n\n                 <p class=\"Link-teach\">Teach on S-help</p>          \n            </form> \n            </div>\n        );\n\n        return (\n            <div className=\"SideContent\">\n                \n                <MainPage \n                heading1={\"Start your\"}\n                heading2={\"learning with\"}/>\n\n                    {form}\n            </div>\n        );\n    }\n  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}