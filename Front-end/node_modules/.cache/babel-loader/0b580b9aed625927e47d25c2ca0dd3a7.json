{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Login/Login.js\";\nimport React, { Component } from 'react';\nimport '../Form.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport axios from '../../../axios-shelp/axios-shelp';\nimport Google_logo from '../../../components/UI/Logo/google';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Form: {\n        email: {\n          placeholder: 'Email',\n          value: \"\",\n          valid: false,\n          type: 'email',\n          error: \" \",\n          msg: '',\n          validation: {\n            required: true,\n            regex: /^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/\n          },\n          touched: false\n        },\n        password: {\n          placeholder: 'Password',\n          value: \"\",\n          valid: false,\n          type: 'password',\n          error: \" \",\n          msg: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 18\n          },\n          touched: false\n        }\n      }\n    };\n\n    this.inputchangeHandler = (event, inputIdentifier) => {\n      const updatedForm = { ...this.state.Form\n      };\n      const updatedElement = { ...updatedForm[inputIdentifier]\n      };\n      const regex = /^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/;\n      updatedElement.value = event.target.value;\n      if (updatedElement.value.length > 0) updatedElement.touched = true;else {\n        updatedElement.touched = false;\n        updatedElement.error = \"\";\n      }\n      updatedElement.valid = this.checkValidity(updatedElement.value, updatedElement.validation);\n\n      if (inputIdentifier === \"password\" && !updatedElement.valid) {\n        updatedElement.error = \"At least 5 characters and at most 18\";\n        updatedElement.msg = \"\";\n      }\n\n      if (inputIdentifier === \"password\" && updatedElement.valid) {\n        updatedElement.error = \"\";\n        updatedElement.msg = \"All good!\";\n      }\n\n      updatedForm[inputIdentifier] = updatedElement;\n      this.setState({\n        Form: updatedForm\n      });\n    };\n\n    this.formHandler = event => {\n      event.preventDefault();\n      const formData = {};\n\n      for (let formElement in this.state.Form) {\n        formData[formElement] = this.state.Form[formElement].value;\n      }\n\n      axios.post('/login', formData).then(response => {\n        console.log('Success:', response);\n        if (response.status === 201 || response.status === 200) alert(\"Account has been made\");else alert(\"Something went wrong\");\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    const regex = rules.regex;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.regex) {\n      isValid = regex.test;\n    }\n\n    return isValid;\n  } //   runs whenever there is any change in the input field\n\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.Form) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.Form[key]\n      });\n    }\n\n    ;\n    let form = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"google-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Google_logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 43\n      }\n    }), \"  Continue using google\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"devider-or\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.formHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, formElementsArray.map(x => /*#__PURE__*/React.createElement(Input, {\n      key: x.id,\n      placeholder: x.config.placeholder,\n      value: x.config.value,\n      type: x.config.type,\n      invalid: !x.config.valid,\n      touched: x.config.touched,\n      errors: x.config.error,\n      msg: x.config.msg,\n      changed: event => this.inputchangeHandler(event, x.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"forgot-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \" Forgot Password?\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Sumbit-btn\",\n      type: \"sumbit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"account-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \" New User? \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 53\n      }\n    }, \"Sign up\"))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SideContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MainPage, {\n      heading1: \"Resume your\",\n      heading2: \"learning with\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }), form);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/container/Forms/Login/Login.js"],"names":["React","Component","Input","MainPage","axios","Google_logo","Login","state","Form","email","placeholder","value","valid","type","error","msg","validation","required","regex","touched","password","minLength","maxLength","inputchangeHandler","event","inputIdentifier","updatedForm","updatedElement","target","length","checkValidity","setState","formHandler","preventDefault","formData","formElement","post","then","response","console","log","status","alert","catch","rules","isValid","trim","test","render","formElementsArray","key","push","id","config","form","map","x"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../Form.css';\nimport Input from '../../../components/UI/Input/Input';\nimport MainPage from '../../../components/UI/MainPage/MainPage';\nimport axios from '../../../axios-shelp/axios-shelp';\nimport Google_logo from '../../../components/UI/Logo/google';\n\n\nclass Login extends Component {\n\n    state = { \n        Form:{\n            \n            email: {\n\n                placeholder: 'Email',\n                value: \"\",\n                valid: false,\n                type: 'email',\n                error: \" \",\n                msg: '',\n\n                validation: {\n                    required: true,\n                    regex:/^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/\n                   \n                },\n                touched: false,\n            \n        },\n\n            password: {\n\n                placeholder: 'Password',\n                value: \"\",\n                valid: false,\n                type: 'password',\n                error: \" \",\n                msg: '',\n\n                validation: {\n                    required: true,\n                    minLength:5,\n                    maxLength:18\n                },\n                touched: false,\n            \n        },\n\n    }\n}\n\n\ncheckValidity(value,rules){\n    let isValid = true;\n    const regex = rules.regex;\n    if(rules.required){\n        isValid =value.trim()!=='' && isValid;\n    }\n\n    if(rules.minLength){\n        isValid = value.length >= rules.minLength  && isValid;\n    }\n \n    \n    if(rules.maxLength){\n        isValid = value.length <= rules.maxLength  && isValid;\n    }\n\n    if(rules.regex){\n        isValid = regex.test\n    }\n\n    return isValid;\n    \n }\n\n\n//   runs whenever there is any change in the input field\ninputchangeHandler = (event,inputIdentifier)=> {\n    const updatedForm = {\n        ...this.state.Form\n    }\n    const updatedElement = {...updatedForm[inputIdentifier]}\n    const regex= /^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/;\n\n    updatedElement.value = event.target.value;\n\n    if(updatedElement.value.length>0) \n        updatedElement.touched=true;\n\n    else {updatedElement.touched=false;\n          updatedElement.error=\"\";  \n    }\n    \n    updatedElement.valid = this.checkValidity(updatedElement.value,\n        updatedElement.validation);\n        \n\n    if(inputIdentifier === \"password\" && !updatedElement.valid){\n        updatedElement.error = \"At least 5 characters and at most 18\";\n        updatedElement.msg=\"\";\n    }\n    if(inputIdentifier === \"password\" && updatedElement.valid){\n        updatedElement.error=\"\";\n        updatedElement.msg=\"All good!\";\n    }\n\n    \n\n\n    updatedForm[inputIdentifier] = updatedElement;\n    this.setState({Form: updatedForm});\n\n}\n\n\nformHandler = (event)=> {\n    event.preventDefault();\n    const formData ={};\n    for(let formElement in this.state.Form){\n            formData[formElement]=this.state.Form[formElement].value;\n     }\n    \n    axios.post('/login',formData)\n\n    .then(response => {console.log('Success:', response) \n    \n    if(response.status ===201 || response.status ===200) \n    alert(\"Account has been made\") \n    else alert(\"Something went wrong\")})\n\n\n    .catch(error=>{console.log(error)});\n\n}\n\n\n\nrender() {\n\n    const formElementsArray =[];\n    for(let key in this.state.Form ){\n        formElementsArray.push({\n            id:key,\n            config:this.state.Form[key]\n        });\n\n    };\n\n    let form = (\n      <div className=\"login-form\">\n          <button className=\"google-btn\"> <Google_logo/>  Continue using google</button>\n          <p className=\"devider-or\">OR</p>\n        <form onSubmit={this.formHandler} >\n        \n            {\n                formElementsArray.map(x=> (\n\n                  <Input \n                    key={x.id}\n                    placeholder={x.config.placeholder}\n                    value={x.config.value}\n                    type={x.config.type}\n                    invalid={!x.config.valid}\n                    touched={x.config.touched}\n                    errors={x.config.error}\n                    msg={x.config.msg}\n                    changed={(event)=> this.inputchangeHandler(event,x.id)}/>\n\n                ))\n            }\n            <p className=\"forgot-password\"> Forgot Password?</p>\n            <button className=\"Sumbit-btn\" type=\"sumbit\" >Login</button>\n            <p className=\"account-login\"> New User? <a href=\"/\">Sign up</a></p>\n         \n\n               \n        </form> \n        </div>\n    );\n\n\n        return (\n            <div className=\"SideContent\">\n                <MainPage\n                heading1={\"Resume your\"}\n                heading2={\"learning with\"}/>\n                    {form}\n            </div>\n        );\n    }\n  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}