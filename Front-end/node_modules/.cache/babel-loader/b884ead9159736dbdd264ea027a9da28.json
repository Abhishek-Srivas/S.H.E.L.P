{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport './Input.css';\n\nconst input = props => {\n  let inputElement = null;\n  var inputclasses = [\"InputElement\"];\n\n  if (props.invalid && props.touched) {\n    const index = inputclasses.indexOf('pop');\n    if (index > -1) inputclasses.splice(index, 1);\n    inputclasses.push(\"Invalid\");\n  } else if (props.touched) {\n    const index = inputclasses.indexOf('pop');\n    if (index > -1) inputclasses.splice(index, 1);\n    inputclasses.push(\"Valid\");\n  }\n\n  if (props.msg) {\n    const error = /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-success error-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    }, props.msg);\n  } else error = /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger error-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }\n  }, props.error);\n\n  inputElement = /*#__PURE__*/React.createElement(\"input\", {\n    type: props.type,\n    placeholder: props.placeholder,\n    className: inputclasses.join(' '),\n    value: props.value,\n    onChange: props.changed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, inputElement, error);\n};\n\nexport default input;","map":{"version":3,"sources":["/home/ayush/Desktop/SI-Projects/S.H.E.L.P/Front-end/src/components/UI/Input/Input.js"],"names":["React","input","props","inputElement","inputclasses","invalid","touched","index","indexOf","splice","push","msg","error","type","placeholder","join","value","changed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAIA,MAAMC,KAAK,GAAIC,KAAD,IAAU;AAEpB,MAAIC,YAAY,GAAE,IAAlB;AACA,MAAIC,YAAY,GAAE,CAAC,cAAD,CAAlB;;AAEA,MAAGF,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACI,OAA1B,EAAkC;AAE9B,UAAMC,KAAK,GAAEH,YAAY,CAACI,OAAb,CAAqB,KAArB,CAAb;AACA,QAAGD,KAAK,GAAC,CAAC,CAAV,EAAaH,YAAY,CAACK,MAAb,CAAoBF,KAApB,EAA0B,CAA1B;AAEbH,IAAAA,YAAY,CAACM,IAAb,CAAkB,SAAlB;AAEH,GAPD,MASK,IAAGR,KAAK,CAACI,OAAT,EAAiB;AAClB,UAAMC,KAAK,GAAEH,YAAY,CAACI,OAAb,CAAqB,KAArB,CAAb;AACA,QAAGD,KAAK,GAAC,CAAC,CAAV,EAAaH,YAAY,CAACK,MAAb,CAAoBF,KAApB,EAA0B,CAA1B;AACXH,IAAAA,YAAY,CAACM,IAAb,CAAkB,OAAlB;AAA6B;;AAGnC,MAAGR,KAAK,CAACS,GAAT,EAAe;AAEf,UAAMC,KAAK,gBAAG;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCV,KAAK,CAACS,GAA7C,CAAd;AAAwE,GAFxE,MAIKC,KAAK,gBAAG;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCV,KAAK,CAACU,KAA5C,CAAR;;AAILT,EAAAA,YAAY,gBAAG;AACf,IAAA,IAAI,EAAED,KAAK,CAACW,IADG;AAEf,IAAA,WAAW,EAAEX,KAAK,CAACY,WAFJ;AAGf,IAAA,SAAS,EAAEV,YAAY,CAACW,IAAb,CAAkB,GAAlB,CAHI;AAIf,IAAA,KAAK,EAAEb,KAAK,CAACc,KAJE;AAKf,IAAA,QAAQ,EAAEd,KAAK,CAACe,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf;AAQA,sBACQ;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECd,YAFD,EAGCS,KAHD,CADR;AAOH,CA3CD;;AA6CA,eAAeX,KAAf","sourcesContent":["import React from 'react';\nimport './Input.css';\n\n\n\nconst input = (props)=> {\n\n    let inputElement= null;\n    var inputclasses =[\"InputElement\"];\n\n    if(props.invalid && props.touched){\n        \n        const index =inputclasses.indexOf('pop');\n        if(index>-1) inputclasses.splice(index,1);\n\n        inputclasses.push(\"Invalid\");\n    \n    }\n\n    else if(props.touched){   \n        const index =inputclasses.indexOf('pop');\n        if(index>-1) inputclasses.splice(index,1);\n          inputclasses.push(\"Valid\"); }\n\n    \n    if(props.msg)  {\n\n    const error = <p className=\"text-success error-msg\">{props.msg}</p>    }\n\n    else error=  <p className=\"text-danger error-msg\">{props.error}</p>\n\n\n\n    inputElement = <input \n    type={props.type}\n    placeholder={props.placeholder}\n    className={inputclasses.join(' ')}\n    value={props.value}\n    onChange={props.changed}/>\n    \n\n    return(\n            <div className=\"Input\">\n            \n            {inputElement}\n            {error}\n            </div>\n    );\n}\n\nexport default input;"]},"metadata":{},"sourceType":"module"}